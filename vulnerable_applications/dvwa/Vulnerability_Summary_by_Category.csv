Vulnerability Category,Count
sql injection,10
cross-site scripting (xss),9
lack of input validation,5
weak password hashing,4
command injection,4
verbose error messages,4
hardcoded database credentials,3
cross-site request forgery (csrf),3
lack of csrf protection,3
lack of input validation and sanitization,2
sql injection in authentication,2
csrf vulnerability,2
default credentials,2
session management,2
weak password storage,2
unrestricted file upload,2
output encoding missing for user input,1
exposed host ports,1
plaintext or weak password hashing,1
unrestricted file uploads,1
detailed error messages,1
security level handling (misleading security),1
insufficient error message handling,1
verbose error display,1
insecure php configuration,1
password storage vulnerability,1
xss vulnerability in guestbook,1
command injection in ping tool,1
verbose error handling,1
storage of passwords,1
potential for command injection,1
sql injection in user authentication,1
insecure configuration and error handling,1
handling user input - xss,1
url safety,1
html attribute handling,1
lack of prepared statements for sql queries,1
use of md5 for password hashing,1
information disclosure and error handling,1
potential bypass via return value misinterpretation,1
lack of ssl/tls verification,1
code execution vulnerability through `eval()`,1
information disclosure via http headers,1
unvalidated input,1
insecure direct object reference (idor),1
improper method access control,1
lack of proper security headers,1
exposing internal response logic,1
unvalidated and unencoded data exposure,1
insecure data storage,1
insufficient input validation / sanitization,1
authentication bypass,1
lack of output encoding,1
insufficient access control,1
sensitive data exposure,1
csrf protection absent,1
incorrect access control,1
lack of proper authorization checks,1
file inclusion based on unsanitized input,1
lack of csrf protections on page interactions,1
inadequate authorization check,1
potential session fixation risk with inactive session management,1
lack of proper output encoding,1
redirect or exit without response body,1
missing logging or monitoring for unauthorized access,1
missing input validation for user function,1
verbose error disclosure,1
potential xss vulnerability,1
hardcoded api key check,1
comment revealing sensitive logic,1
inline php within html,1
insecure captcha bypass,1
client-side captcha state manipulation,1
exploitable development backdoor in captcha,1
use of xor for encryption,1
use of ecb mode for encryption,1
vulnerability to padding oracle attacks,1
lack of authentication in encryption,1
insecure token handling and usage,1
absence of csrf protection,1
insecure cryptographic practices,1
exception handling and verbose error messages,1
command injection risk,1
predictable encryption practices,1
insecure protocol use,1
hardcoded encryption key,1
lack of key rotation and management,1
insecure encryption practices,1
inadequate error handling,1
use of predictable iv in token creation,1
no integrity checking,1
error information disclosure,1
session management weakness,1
lack of csrf mitigations,1
json endpoint for csrf protection,1
insecure error handling,1
improper input handling for `$_request`,1
file inclusion vulnerability,1
rfi prevention (configuration weakness),1
improper input validation and insufficient access control,1
direct file inclusion without validation,1
insecure hashing algorithm,1
weak obfuscation,1
client-side token generation,1
insecure client-side logic,1
open redirect,1
missing csrf protection,1
insufficient session management,1
sql injection in low-level security,1
inadequate use of `mysql_real_escape_string()` in medium-level security,1
vulnerabilities in high-level security through session variables,1
xss in feedback messages,1
cookie without validation,1
inconsistent error handling,1
web-accessible upload directory,1
reliance on mime type and size for validation,1
predictable session ids,1
cookie settings - lack of secure and httponly flags,1
open redirect vulnerability,1
lack of input validation for url parameters,1
reliance on client-side security,1
reflected cross-site scripting (xss),1
misleading security levels,1
anti-csrf token verification,1
insufficient input validation/sanitization,1
